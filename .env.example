# AI Project Environment Variables Template
# Скопируйте этот файл в .env и заполните своими значениями

# ===========================================
# ОСНОВНЫЕ НАСТРОЙКИ ПРОЕКТА
# ===========================================

# Домен (ОБЯЗАТЕЛЬНО ИЗМЕНИТЕ!)
# Должен указывать на ваш сервер через A-запись в DNS
DOMAIN=your-domain.com

# ===========================================
# NODE-RED CONFIGURATION
# ===========================================

# Пароль для доступа к Node-RED административной панели
# Генерируйте сложный пароль: openssl rand -base64 32
NODE_RED_PASSWORD=change-this-strong-password

# ===========================================
# FLOWISE AI CONFIGURATION  
# ===========================================

# Email и пароль для Flowise AI административной панели
FLOWISE_EMAIL=admin@your-domain.com
FLOWISE_PASSWORD=change-this-strong-password

# Версия Flowise (latest или конкретная версия)
FLOWISE_VERSION=latest

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# MySQL настройки
MYSQL_HOST=mysql_db
MYSQL_PORT=3306
MYSQL_EXTERNAL_PORT=3306
MYSQL_DATABASE=bots

# ВАЖНО: Поменяйте пароль root пользователя MySQL
MYSQL_ROOT_PASSWORD=change-this-mysql-root-password

# ===========================================
# SSL/TLS CONFIGURATION
# ===========================================

# Email для уведомлений Let's Encrypt (ОБЯЗАТЕЛЬНО ИЗМЕНИТЕ!)
ACME_EMAIL=admin@your-domain.com


# ===========================================
# SYSTEM CONFIGURATION
# ===========================================

# Часовой пояс
TZ=Europe/Kiev

# ===========================================
# EXTERNAL SERVICES (добавьте по необходимости)
# ===========================================

# Telegram Bot API (для Node-RED интеграций)
# TELEGRAM_BOT_TOKEN=your_bot_token_here

# OpenAI API (для Flowise AI)
# OPENAI_API_KEY=sk-your_openai_api_key_here

# ===========================================
# LIGHTRAG AI CONFIGURATION
# ===========================================

# LightRAG Authentication (JWT)
# Формат: username:password (можно несколько через запятую)
AUTH_ACCOUNTS=admin:change-this-strong-password

# Secret ключ для JWT токенов (сгенерируйте случайную строку)
TOKEN_SECRET=change-this-random-secret-key-min-32-chars

# Время жизни JWT токена в часах (по умолчанию 4)
TOKEN_EXPIRE_HOURS=24

# LightRAG API Key (альтернативный метод аутентификации)
# Используется через заголовок X-API-Key в запросах
LIGHTRAG_API_KEY=change-this-api-key-to-secure-string

# Белый список путей без аутентификации (через запятую)
# /health - проверка здоровья, /api/* - Ollama emulation endpoints
WHITELIST_PATHS=/health,/api/*

# LightRAG Configuration
SUMMARY_LANGUAGE=English
CHUNK_SIZE=1200
CHUNK_OVERLAP_SIZE=200
FORCE_LLM_SUMMARY_ON_MERGE=4
SUMMARY_MAX_TOKENS=30000

# Embeddings Configuration
EMBEDDING_BINDING=openai
EMBEDDING_MODEL=text-embedding-3-large
EMBEDDING_DIM=3072
EMBEDDING_BINDING_HOST=https://api.openai.com/v1
EMBEDDING_BINDING_API_KEY=sk-your_openai_api_key_here

# LLM Configuration (Gemini)
#LLM_BINDING=openai
#LLM_MODEL=gemini-2.5-flash
#LLM_BINDING_HOST=https://generativelanguage.googleapis.com/v1beta
#для Gemini
#LLM_BINDING_API_KEY=your_openai_api_key_here

# LLM Configuration (OpenAi)
LLM_BINDING=openai
LLM_MODEL=gpt-4.1-mini
LLM_BINDING_HOST=https://api.openai.com/v1
#для openai
LLM_BINDING_API_KEY=sk-your_openai_api_key_here

# Performance Settings
MAX_ASYNC=12
MAX_PARALLEL_INSERT=3
EMBEDDING_FUNC_MAX_ASYNC=24
EMBEDDING_BATCH_NUM=100

# Reranking Configuration (улучшает релевантность результатов поиска)
# Поддерживаемые провайдеры: cohere, aliyun, jina
# OpenAI не поддерживается напрямую для rerank
# RERANK_BINDING=cohere
# RERANK_MODEL=rerank-english-v3.0
# RERANK_BINDING_HOST=https://api.cohere.ai/v1/rerank
# RERANK_BINDING_API_KEY=your_cohere_api_key

# ===========================================
# CHROMA-API CONFIGURATION
# ===========================================

# ChromaDB Connection (внутренняя сеть Docker)
CHROMA_SERVER_HOST=service_chroma
CHROMA_SERVER_PORT=8000

# Chroma-API Settings
CHROMA_MODEL=text-embedding-3-large
CHROMA_DEFAULT_CHUNK_SIZE=1000
CHROMA_DEFAULT_CHUNK_OVERLAP=200

# Security Token (для доступа к API)
CHROMA_API_TOKEN=change-this-chroma-api-token

# ===========================================
# ДОПОЛНИТЕЛЬНЫЕ API КЛЮЧИ
# ===========================================

# Google AI API (для Flowise AI)
# GOOGLE_API_KEY=your_google_api_key_here

# Anthropic Claude API (для Flowise AI)
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Pinecone Vector Database (для Flowise AI)
# PINECONE_API_KEY=your_pinecone_api_key_here
# PINECONE_INDEX_NAME=your_index_name
# PINECONE_ENVIRONMENT=your_environment

# Chroma DB настройки (если используете внешний Chroma)
# CHROMA_HOST=localhost
# CHROMA_PORT=8333

# ===========================================
# ДОПОЛНИТЕЛЬНЫЕ ИНТЕГРАЦИИ
# ===========================================

# Discord Bot Token
# DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Slack Bot Token  
# SLACK_BOT_TOKEN=xoxb-your_slack_bot_token_here

# WhatsApp Business API
# WHATSAPP_API_TOKEN=your_whatsapp_token_here

# Facebook Messenger API
# FACEBOOK_PAGE_ACCESS_TOKEN=your_facebook_token_here

# Twilio API (SMS/Voice)
# TWILIO_ACCOUNT_SID=your_twilio_account_sid
# TWILIO_AUTH_TOKEN=your_twilio_auth_token

# ===========================================
# МОНИТОРИНГ И ЛОГИРОВАНИЕ
# ===========================================

# Sentry DSN (для отслеживания ошибок)
# SENTRY_DSN=https://your_sentry_dsn_here

# Datadog API (для мониторинга)
# DATADOG_API_KEY=your_datadog_api_key_here

# ===========================================
# DEVELOPMENT/DEBUG (для разработки)
# ===========================================

# Уровень логирования (DEBUG, INFO, WARN, ERROR)
# LOG_LEVEL=INFO

# Режим разработки (true/false)
# DEBUG_MODE=false

# ===========================================
# ПРИМЕЧАНИЯ
# ===========================================

# 1. НИКОГДА не коммитьте .env файл с реальными данными в git!
# 2. Используйте сложные пароли и регулярно их меняйте
# 3. Для production окружения рассмотрите использование Docker Secrets
# 4. API ключи можно добавлять через переменные окружения в runtime:
#    docker compose exec service_name env OPENAI_API_KEY=your_key
# 5. Для генерации паролей используйте: openssl rand -base64 32