#!/bin/bash
# setup-server.sh - –°–∫—Ä–∏–ø—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ Docker Swarm

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y
sudo apt install htop

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt install -y \
    curl \
    wget \
    htop \
    ncdu \
    net-tools \
    jq \
    apache2-utils \
    ufw \
    fail2ban \
    git

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
if ! command -v docker &> /dev/null
then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    rm get-docker.sh
else
    echo "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
fi

# 4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
echo "üë§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER –≤ –≥—Ä—É–ø–ø—É docker..."
sudo usermod -aG docker $USER

# 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker daemon
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker daemon..."
sudo bash -c 'cat > /etc/docker/daemon.json << EOF
{
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m",
    "max-file": "3"
  },
  "storage-driver": "overlay2"
}
EOF'

# 6. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ Docker
echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ Docker..."
sudo systemctl restart docker
sudo systemctl enable docker

# 7. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
sudo mkdir -p /root/ai_project/
sudo mkdir -p /root/ai_project/logs  # –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Traefik
sudo mkdir -p /var/www/html/data  # –î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤

# 8. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞..."
# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã nginx - –ø—Ä–∞–≤–∞ 777 –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏–∑ Node-RED –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
sudo chown -R 101:101 /var/www/html/data
sudo chmod -R 777 /var/www/html/data

echo "üìÅ –ü–∞–ø–∫–∞ /var/www/html/data –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å –ø—Ä–∞–≤–∞–º–∏ 777 –¥–ª—è Node-RED —Ñ–∞–π–ª–æ–≤"

# –ü—Ä–∞–≤–∞ –¥–ª—è –ø–∞–ø–∫–∏ –ª–æ–≥–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–¥–æ—Å—Ç—É–ø –¥–ª—è fail2ban)
sudo chown -R root:root /root/ai_project/logs
sudo chmod -R 755 /root/ai_project/logs

# 9. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW firewall
echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW firewall..."
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow 22/tcp    # SSH
sudo ufw allow 80/tcp    # HTTP
sudo ufw allow 443/tcp   # HTTPS
sudo ufw allow 5050/tcp  # FLOWISE (–ü—Ä–∏–º–µ—Ä –ø–æ—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
sudo ufw --force enable

# 10. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Fail2ban —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∑–∞—â–∏—Ç–æ–π
echo "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Fail2ban —Å –∑–∞—â–∏—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤..."

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –æ–±—â–∏—Ö –∞—Ç–∞–∫ —á–µ—Ä–µ–∑ Traefik
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ traefik-custom.conf..."
sudo bash -c 'cat > /etc/fail2ban/filter.d/traefik-custom.conf <<EOF
# Traefik Custom Authentication Filter for AI Project
# Detects HTTP authentication failures and attack patterns

[Definition]

# Match authentication failures (401, 403) and suspicious 404s
failregex = ^<HOST> - .* "(GET|POST|PUT|DELETE|HEAD|OPTIONS) .* HTTP/[12]\.[01]" (401|403|404) .*$
            ^<HOST> - .* "(GET|POST|HEAD) .*\.(php|asp|jsp|cgi|pl)" .* 404 .*$
            ^<HOST> - .* "(GET|POST|HEAD) .*(admin|login|wp-admin|wp-login|phpmyadmin|admin\.php)" .* (401|403|404) .*$
            ^<HOST> - .* "(GET|POST|HEAD) .*(\.env|config|backup|sql)" .* 404 .*$

# Ignore legitimate requests
ignoreregex = ^<HOST> - .* "(GET|POST) .* HTTP/[12]\.[01]" (200|301|302|304) .*$

[Init]
maxlines = 10
datepattern = ^%%d/%%b/%%Y:%%H:%%M:%%S
EOF'

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã Node-RED
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ traefik-nodered.conf..."
sudo bash -c 'cat > /etc/fail2ban/filter.d/traefik-nodered.conf <<EOF
# Node-RED Authentication Filter
# Specifically targets Node-RED authentication endpoints and admin panel access

[Definition]

# Node-RED specific authentication failures
failregex = ^<HOST> - .* "POST /auth/token HTTP/[12]\.[01]" (401|403) .*$
            ^<HOST> - .* "(GET|POST) /auth/.* HTTP/[12]\.[01]" (401|403) .*$
            ^<HOST> - .* "(GET|POST) /admin.* HTTP/[12]\.[01]" (401|403) .*$
            ^<HOST> - .* "(GET|POST) /settings.* HTTP/[12]\.[01]" (401|403) .*$
            ^<HOST> - .* "(GET|POST) .* HTTP/[12]\.[01]" (401|403) .*nodered.*$

# Multiple rapid requests to Node-RED endpoints (potential brute force)
            ^<HOST> - .* "(GET|POST) /(red|admin|auth|settings|flows) .* HTTP/[12]\.[01]" .*$

# Ignore successful authentication
ignoreregex = ^<HOST> - .* "POST /auth/token HTTP/[12]\.[01]" 200 .*$
              ^<HOST> - .* "(GET|POST) .* HTTP/[12]\.[01]" (200|304) .*$

[Init]
maxlines = 5
datepattern = ^%%d/%%b/%%Y:%%H:%%M:%%S
EOF'

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã Flowise AI
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ traefik-flowise.conf..."
sudo bash -c 'cat > /etc/fail2ban/filter.d/traefik-flowise.conf <<EOF
# Flowise AI Authentication Filter
# Protects Flowise AI admin panel and API endpoints on port 5050

[Definition]

# Flowise authentication failures (port 5050 specific)
failregex = ^<HOST> - .* "(GET|POST|PUT|DELETE) .*:5050.* HTTP/[12]\.[01]" (401|403|404) .*$
            ^<HOST> - .* "(GET|POST) .* HTTP/[12]\.[01]" (401|403) .*flowise.*$
            ^<HOST> - .* "(GET|POST) /(api/v1/chatflows|api/v1/credentials|api/v1/tools).* HTTP/[12]\.[01]" (401|403) .*$
            ^<HOST> - .* "(GET|POST) /login.* HTTP/[12]\.[01]" (401|403) .*$

# Detect scanning attempts on Flowise endpoints
            ^<HOST> - .* "(GET|POST) /(admin|dashboard|config|api).* HTTP/[12]\.[01]" 404 .*flowise.*$

# Multiple requests to Flowise in short time (potential attack)
            ^<HOST> - .* "(GET|POST) .* HTTP/[12]\.[01]" .* .*flowise.*$ 

# Ignore successful Flowise requests
ignoreregex = ^<HOST> - .* "(GET|POST) .* HTTP/[12]\.[01]" (200|301|302|304) .*flowise.*$

[Init] 
maxlines = 5
datepattern = ^%%d/%%b/%%Y:%%H:%%M:%%S
EOF'

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ jail.local
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ /etc/fail2ban/jail.local..."
sudo bash -c 'cat > /etc/fail2ban/jail.local <<EOF
[sshd]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 5
bantime = 3600  # –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ IP –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–∑–¥–µ—Å—å 1 —á–∞—Å)
findtime = 600  # –ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—á–µ—Ç–∞ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ (–∑–¥–µ—Å—å 10 –º–∏–Ω—É—Ç)

# ==============================================
# TRAEFIK PROTECTION - AI PROJECT SECURITY
# ==============================================

[traefik-general]
enabled = true
port = http,https
filter = traefik-custom
logpath = /root/ai_project/logs/access.log
maxretry = 10
bantime = 7200   # 2 hours ban for general attacks
findtime = 300   # 5 minutes window
action = %(action_mwl)s

[nodered-auth]
enabled = true
port = 443
filter = traefik-nodered
logpath = /root/ai_project/logs/access.log
maxretry = 3
bantime = 14400  # 4 hours ban for Node-RED attacks
findtime = 600   # 10 minutes window
action = %(action_mwl)s

[flowise-auth]
enabled = true
port = 5050
filter = traefik-flowise
logpath = /root/ai_project/logs/access.log
maxretry = 3
bantime = 14400  # 4 hours ban for Flowise attacks  
findtime = 600   # 10 minutes window
action = %(action_mwl)s
EOF'

# –í–∫–ª—é—á–∞–µ–º, –∑–∞–ø—É—Å–∫–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
sudo systemctl enable fail2ban
sudo systemctl start fail2ban
sudo systemctl restart fail2ban

# 11. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Traefik..."
sudo bash -c 'cat > /root/ai_project/sync-logs.sh <<'"'"'EOF'"'"'
#!/bin/bash
# Traefik Logs Auto-Sync Script for Fail2ban
# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –ª–æ–≥–∏ Traefik –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ —Ö–æ—Å—Ç –¥–ª—è fail2ban

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_DIR="/root/ai_project"
LOG_DIR="${PROJECT_DIR}/logs"
TRAEFIK_CONTAINER="service_traefik"
LOG_FILE="access.log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo "[$(date '"'"'+%Y-%m-%d %H:%M:%S'"'"')] $1" >> "${LOG_DIR}/sync.log"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if ! docker ps --format "{{.Names}}" | grep -q "^${TRAEFIK_CONTAINER}$"; then
    log_message "ERROR: Container ${TRAEFIK_CONTAINER} not found or not running"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p "${LOG_DIR}"

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤
cd "${PROJECT_DIR}" || exit 1

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if docker exec "${TRAEFIK_CONTAINER}" test -f "/var/log/${LOG_FILE}"; then
    # –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–≥ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if docker exec "${TRAEFIK_CONTAINER}" cp "/var/log/${LOG_FILE}" "/tmp/sync_${LOG_FILE}"; then
        # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ —Ö–æ—Å—Ç
        if docker cp "${TRAEFIK_CONTAINER}:/tmp/sync_${LOG_FILE}" "${LOG_DIR}/${LOG_FILE}"; then
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            docker exec "${TRAEFIK_CONTAINER}" rm -f "/tmp/sync_${LOG_FILE}" 2>/dev/null
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø—Ä–∞–≤–∞
            chmod 644 "${LOG_DIR}/${LOG_FILE}"
            
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º fail2ban –¥–ª—è —á—Ç–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ª–æ–≥–æ–≤
            if systemctl is-active --quiet fail2ban; then
                sudo fail2ban-client reload traefik-general >/dev/null 2>&1
                sudo fail2ban-client reload nodered-auth >/dev/null 2>&1
                sudo fail2ban-client reload flowise-auth >/dev/null 2>&1
                log_message "SUCCESS: Logs synced and fail2ban reloaded"
            else
                log_message "WARNING: fail2ban service not active"
            fi
        else
            log_message "ERROR: Failed to copy logs from container to host"
            exit 1
        fi
    else
        log_message "ERROR: Failed to copy logs within container"
        exit 1
    fi
else
    log_message "WARNING: Log file /var/log/${LOG_FILE} not found in container"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å—Ç—Ä–æ–∫)
if [[ -f "${LOG_DIR}/sync.log" ]]; then
    tail -1000 "${LOG_DIR}/sync.log" > "${LOG_DIR}/sync.log.tmp" && mv "${LOG_DIR}/sync.log.tmp" "${LOG_DIR}/sync.log"
fi

exit 0
EOF'

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
sudo chmod +x /root/ai_project/sync-logs.sh

# 12. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ cron
echo "‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ cron..."
(sudo crontab -l 2>/dev/null; echo "# AI Project - Traefik Logs Auto-Sync for Fail2ban"; echo "# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –ª–æ–≥–∏ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è fail2ban"; echo "*/2 * * * * /root/ai_project/sync-logs.sh >/dev/null 2>&1"; echo ""; echo "# –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:00"; echo "0 3 * * * find /root/ai_project/logs -name 'sync.log' -mtime +7 -delete >/dev/null 2>&1") | sudo crontab -

# 13. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏ –∏—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∑–∞—â–∏—Ç–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å Docker:"
sudo systemctl status docker --no-pager | grep "Active:"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å Fail2ban —Å –∑–∞—â–∏—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤:"
sudo systemctl status fail2ban --no-pager | grep "Active:"
if command -v fail2ban-client &> /dev/null; then
    echo "üõ°Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–µ jail:"
    sudo fail2ban-client status 2>/dev/null | grep "Jail list:" || echo "   SSH –∑–∞—â–∏—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
fi
echo ""
echo "üìä UFW —Å—Ç–∞—Ç—É—Å:"
sudo ufw status numbered
echo ""
echo "üìä Cron –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:"
sudo crontab -l | grep -c "sync-logs.sh" >/dev/null && echo "‚úÖ –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ (–∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã)" || echo "‚ùå –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
echo ""
echo "üéØ –ß—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:"
echo "   ‚úÖ Docker —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤"
echo "   ‚úÖ UFW firewall (–ø–æ—Ä—Ç—ã: 22, 80, 443, 5050)"
echo "   ‚úÖ Fail2ban —Å –∑–∞—â–∏—Ç–æ–π SSH"
echo "   ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ fail2ban –¥–ª—è –ø–æ—Ä—Ç–æ–≤ 443 –∏ 5050"
echo "   ‚úÖ –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤ Traefik –¥–ª—è fail2ban"
echo "   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏"
echo "   ‚úÖ –ü–∞–ø–∫–∞ /var/www/html/data —Å –ø—Ä–∞–≤–∞–º–∏ 777 –¥–ª—è Node-RED"
echo ""
echo "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ü–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å: 'exit' –∑–∞—Ç–µ–º 'ssh root@server'"
echo "   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
echo "   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: './ssl-check.sh' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–∞"
echo "   4. –ü—Ä–∏ —É—Å–ø–µ—Ö–µ: 'docker compose up -d' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   sudo fail2ban-client status              # –°—Ç–∞—Ç—É—Å –∑–∞—â–∏—Ç—ã"
echo "   tail -f /root/ai_project/logs/sync.log   # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
echo "   /root/ai_project/sync-logs.sh            # –†—É—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"
echo ""
echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø—Ä–∞–≤–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"